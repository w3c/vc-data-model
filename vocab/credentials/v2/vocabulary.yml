vocab:
  - id: cred
    value: https://w3.org/2018/credentials#

prefix:
  - id: odrl
    value: http://www.w3.org/ns/odrl/2/

ontology:
  - property: dc:title
    value: Verifiable Credentials Vocabulary v2.0

  - property: dc:description
    value: RDFS [[RDF-SCHEMA]] vocabulary used by the Verifiable Credentials [[VC-DATA-MODEL]]

  - property: rdfs:seeAlso
    value: https://www.w3.org/TR/vc-data-model-2.0/

class:
  - id: JsonSchemaValidator2018
    label: Json schema validator 2018
    upper_value: cred:CredentialSchema
    deprecated: true
    comment: A type of validator that can be used to syntactically validate JSON documents using the JSON Schema language.

  - id: ManualRefreshService2018
    label: Manual refresh service 2018
    upper_value: cred:RefreshService
    deprecated: true
    comment: A type of Refresh Service that must be interacted with in a manual fashion.

  - id: RefreshService
    label: Refresh service
    comment: A Refresh Service is a mechanism that can be utilized by software agents to retrieve an updated copy of a Verifiable Credential.

  - id: CredentialSchema
    label: Credential schema
    comment: A Credential Schema provides verifiers with enough information to determine if the provided data conforms to the provided schema.

  - id: CredentialStatus
    label: Credential status
    comment: A Credential Status provides enough information to determine the current status of the credential (for example, suspended or revoked). It MUST include the `id` property, which MUST be a URL, and the `type` property, which expresses the credential status type (also referred to as the credential status scheme)

  - id: CredentialEvidence
    label: Credential evidence
    comment: A Credential Evidence scheme provides enough information to a verifier to determine whether the evidence gathered meets their requirements for issuing a credential. The precise content of each evidence scheme is determined by the specific evidence type definition.

  - id: VerifiableCredential
    label: Verifiable credential
    comment: |
      A Credential is a set of one or more claims made by an issuer. A Verifiable Credential is a tamper-evident credential that has authorship that can be cryptographically verified. Verifiable Credentials can be used to build Verifiable Presentations, which can also be cryptographically verified.

  - id: VerifiableCredentialGraph
    label: Verifiable credential graph
    comment: Instances of this class are RDF Graphs, where each of these graphs must include exactly one Verifiable Credential

  - id: VerifiablePresentation
    label: Verifiable presentation
    comment: |
      A Presentation is data derived from one or more Credentials, issued by one or more `issuers`, that is shared with a specific `verifier`. A Verifiable Presentation is a tamper-evident Presentation encoded in such a way that authorship of the data can be trusted after a process of cryptographic verification. Certain types of verifiable presentations might contain data that is synthesized from, but do not contain, the original verifiable credentials (for example, zero-knowledge proofs).

property:
  - id: credentialSchema
    label: Credential schema
    domain: cred:VerifiableCredential
    range: cred:CredentialSchema
    comment: The value of the `credentialSchema` property MUST be one or more <a href="#CredentialSchema">Credential schema</a> instances.

  - id: credentialStatus
    label: Credential status
    domain: cred:VerifiableCredential
    range: cred:CredentialStatus
    comment: The value of the `credentialStatus` property MUST be an instance of a <a href="#CredentialStatus">Credential status</a>.

  - id: credentialSubject
    label: Credential subject
    domain: cred:VerifiableCredential
    range: IRI
    comment: An entity about which claims are made.

  - id: evidence
    label: Evidence
    domain: cred:VerifiableCredential
    range: cred:CredentialEvidence
    comment: The value of the `evidence` property MUST be one or more <a href="#CredentialEvidence">Credential evidence</a> instances.

  - id: expirationDate
    label: Expiration date
    domain: cred:VerifiableCredential
    range: xsd:dateTime
    deprecated: true
    comment: The value of the `expirationDate` property was used to express the date and time the credential ceases to be valid. It has been deprecated in favor of <a href="#validUntil">`validUntil`</a>

  - id: holder
    label: Holder
    domain:
      - cred:VerifiableCredential
      - cred:VerifiablePresentation
    range : IRI
    comment: |
      The value of the `holder` property MUST be a URI. It is RECOMMENDED that dereferencing the URI results in a document containing machine-readable information about the holder that can be used to verify the information expressed in the credential.

  - id: issuanceDate
    label: Issuance date
    domain: cred:VerifiableCredential
    range: xsd:dateTime
    deprecated: true
    comment: |
      The value of the `issuanceDate` property was used to represents the earliest date when the information associated with the <a href="#credentialSubject">`credentialSubject`</a> property became valid. This property has been deprecated in favour of <a href="#validFrom">`validFrom`</a>.

  - id: issued
    label: issue date
    domain: cred:VerifiableCredential
    range: xsd:dateTime
    comment: |
      The value of the `issued` property MUST be a string value of an ISO8601 combined date and time string representing the date and time the credential was issued. Note that this date represents the earliest date when the information associated with the <a href="#credentialSubject>`credentialSubject`</a> property became valid.

  - id: issuer
    label: issuer
    domain: cred:VerifiableCredential
    range: IRI
    comment: |
      The value of the `issuer` property MUST be a URI. It is RECOMMENDED that dereferencing the URI results in a document containing machine-readable information about the issuer that can be used to verify the information expressed in the credential.

  - id: refreshService
    label: refresh service
    domain: cred:VerifiableCredential
    range: cred:RefreshService
    comment: The value of the `refreshService` property MUST be one or more Refresh Service instances such that the holder can refresh the credential.

  - id: serviceEndpoint
    label: service endpoint
    domain: cred:RefreshService
    range: IRI
    comment: The value of the `serviceEndpoint` property MUST be a URL to the service endpoint associated with the subject.

  - id: termsOfUse
    label: terms of use
    domain: cred:VerifiableCredential,cred:VerifiablePresentation
    range: odrl:Policy
    comment: |
      If specified, the value of the optional `termsOfUse` property MUST specify one or more terms of use policies under which the issuer issued the credential or presentation. Each `termsOfUse` policy MUST specify its type (for example, `IssuerPolicy`) and MAY specify its instance `id`. The precise content of each term of use is determined by the specific `TermsOfUse` type definition. If the recipient (a holder or verifier) violates the specified terms of use, the responsibility is their own, and such violation may incur legal liability.

  - id: validFrom
    label: Valid from
    domain: cred:VerifiableCredential
    range: xsd:dateTime
    comment: |
      The value of the `validFrom` property MUST be a string value of an ISO8601 combined date and time string representing the date and time the credential was issued. Note that this date represents the earliest date when the information associated with the <a href="#credentialSubject>`credentialSubject`</a> property became valid.

  - id: validUntil
    label: Valid until
    domain: cred:VerifiableCredential
    range: xsd:dateTime
    comment: The value of the `validUntil` property MUST be a string value of an ISO8601 combined date and time string representing the date and time the credential ceases to be valid.

  - id: verifiableCredential
    label: verifiable credential
    domain: cred:VerifiablePresentation
    range: cred:VerifiableCredentialGraph
    comment: The value of the `verifiableCredential` property MUST identify a <a href="#VerifiableCredentialGraph">Verifiable credential graph</a> (informally, it indirectly identifies a <a href="#VerifiableCredential">Verifiable credential</a> contained in a separate graph).
